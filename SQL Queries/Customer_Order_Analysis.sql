use product_customer;
-- ======================================================= Basic to Intermediate Level ===========================================================
-- Query-1) List all customers who have placed more than one order.
select
	c.customer_id,
    c.first_name,
    c.last_name,
    count(o.order_id) as order_count
from customers as c
join orders as o
	on c.customer_id = o.customer_id
group by c.customer_id, c.first_name, c.last_name
having count(o.order_id) > 1;


-- Query-2) Retrieve the total number of products ordered in each category.
select 
	p.category,
    sum(oi.quantity) as total_products
from products as p
join order_items as oi
	on p.product_id = oi.product_id
join orders as o
	on o.order_id = oi.order_id
group by p.category
order by total_products;

-- Query-3) Find the total revenue generated by each product.
select 
	p.product_id,
    p.product_name,
    sum(oi.quantity * p.price) as total_revenue
from products as p
join order_items as oi
	on p.product_id = oi.product_id
group by p.product_id, p.product_name
order by p.product_id;
    

-- Query-4) Get the list of customers who havenâ€™t placed any order.
select 
	c.customer_id,
    c.first_name,
    c.last_name
from customers as c
left join orders as o
	on c.customer_id = o.customer_id
where o.customer_id is NULL;


-- Query-5) Show the average order value (total price) for each order.
select 
	o.order_id,
    round(sum(oi.quantity * p.price),2) as total_order_value
from orders as o
join order_items as oi
	on o.order_id = oi.order_id
join products as p
	on p.product_id = oi.product_id
group by o.order_id;

-- Query-6) Which product has been ordered the most in terms of quantity?
select 
	p.product_id,
    p.product_name,
    sum(oi.quantity) as product_quantity
from products as p
join order_items as oi
	on p.product_id = oi.product_id
join orders as o
	on o.order_id = oi.order_id
group by p.product_id, p.product_name
order by product_quantity desc
limit 1;
    
    
-- ======================================================= Joins & Aggregations ===========================================================

-- Query-7) Get the total revenue generated per customer.
select 
	c.customer_id,
    c.first_name,
    c.last_name,
    sum(oi.quantity * p.price) as total_revenue
from customers as c
join orders as o
	on c.customer_id = o.customer_id
join order_items as oi
	on oi.order_id = o.order_id
join products as p
	on p.product_id = oi.product_id
group by c.customer_id, c.first_name, c.last_name
order by c.customer_id;


-- Query-8) List all orders along with the total quantity of items in each.
select
	o.order_id,
    sum(oi.quantity) as total_quantity
from orders as o
join order_items as oi
	on o.order_id = oi.order_id
group by o.order_id
order by o.order_id;

-- Query-9) For each category, calculate the average selling price of products sold.
select
	p.category,
    round(sum(oi.quantity * p.price)/ sum(oi.quantity),2) as average_selling_price
from products as p
join order_items as oi
	on p.product_id = oi.product_id
join orders as o
	on o.order_id = oi.order_id
group by p.category;

-- Query-10) Find the top 3 customers by revenue generated.
select 
	c.customer_id,
	c.first_name,
	c.last_name,
    sum(oi.quantity * p.price) as Revenue
from customers as c
join orders as o
	on c.customer_id = o.customer_id
join order_items as oi
	on oi.order_id = o.order_id
join products as p
	on oi.product_id = p.product_id
group by c.customer_id, c.first_name, c.last_name
order by Revenue DESC
limit 3;

-- Query-11) Show the number of orders per month along with the number of unique customers.
select
	year(order_Date) as order_year, 
	Month(order_date) as order_month,
    count(order_id) as total_order_quantity,
    count(distinct customer_id) as number_of_unique_customers
from orders
group by year(order_Date), Month(order_date)
order by order_year, order_month;

-- ================================================= Advanced Window Functions/ SubQueries ===========================================================

-- Query-11) Find the latest order date for each customer.
select *
from
(
select 
	c.customer_id,
    c.first_name,
    c.last_name,
    o.order_date,
    row_number() over (partition by c.customer_id order by o.order_date desc) as RNK
from customers as c
join orders as o
	on c.customer_id = o.customer_id
) as latest_order_date
where RNK = 1;


-- Query-12) Show customers who placed an order for every month between september and november.

-- Query-13) Get the rank for each products based on total sales revenue
select 
	p.product_id,
    p.product_name,
    sum(oi.quantity * p.price) as revenue,
    rank() over (order by sum(oi.quantity * p.price) )as Product_Rank
from products as p
join order_items as oi
	on p.product_id = oi.product_id
join orders as o
	on o.order_id = oi.order_id
group by p.product_id, p.product_name;

-- Query-14) Get the average order size (in number of items) for each customer and compare it to the overall average.
select * from customers;
select * from order_items;
select * from orders;
select * from products;

select 
	c.customer_id,
    c.first_name,
    c.last_name,
    count(o.order_id) as average_order_count
from customers as c
join orders as o
	on c.customer_id = o.customer_id
group by c.customer_id, c.first_name, c.last_name;
    




